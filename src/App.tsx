import { FormEvent, useState, ChangeEvent, useEffect, MouseEvent } from 'react'
import { EmptyTasksList } from './components/EmptyTasksList'
import { Input } from './components/Input'

interface TaskProps {
  id: number
  content: string
  isChecked: boolean
}

export interface TasksListProps {
  task: TaskProps
}

export function App() {
  const [taskList, setTaskList] = useState<TaskProps[]>([])
  const [newTaskText, setNewTaskText] = useState('')
  const [totalOfTasks, setTotalOfTasks] = useState(0)

  useEffect(() => {
    setTotalOfTasks(() => taskList.length)
  }, [taskList])

  function handleNewTaskText(event: ChangeEvent<HTMLInputElement>) {
    setNewTaskText(event.target.value)
  }

  function createNewTask(event: FormEvent | Event) {
    event.preventDefault()

    const newTaskId = taskList.length + 1
    setTaskList([
      {
        id: newTaskId,
        content: newTaskText,
        isChecked: false,
      },
      ...taskList,
    ])

    setNewTaskText('')
  }

  function handleTaskToggle(
    event: MouseEvent<HTMLInputElement>,
    taskId: number,
  ) {
    const isChecked = event.currentTarget.checked
    const updatedTaskListWithTaskChecked = taskList.map((task) => {
      if (task.id === taskId) {
        return { ...task, isChecked }
      }
      return task
    })
    setTaskList(updatedTaskListWithTaskChecked)
  }

  const checkedTasksCounter = taskList.reduce((prevValue, currentTask) => {
    if (currentTask.isChecked) {
      return prevValue + 1
    }

    return prevValue
  }, 0)

  function handleDeleteTask(taskId: number) {
    const updatedTaskListWithDeletedTask = taskList.filter(
      (task) => task.id !== taskId,
    )

    setTaskList(updatedTaskListWithDeletedTask)
  }

  return (
    <main className="antialiased mb-10">
      <div className="bg-gray-700 mx-auto">
        <div className="flex flex-col items-center justify-center pt-20">
          <svg
            width="126"
            height="48"
            viewBox="0 0 126 48"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M49 17.1818V22.8636H34.625V17.1818H49ZM37.4091 11.9545H45.25V31.983C45.25 32.286 45.3021 32.5417 45.4062 32.75C45.5104 32.9489 45.6714 33.1004 45.8892 33.2045C46.107 33.2992 46.3864 33.3466 46.7273 33.3466C46.964 33.3466 47.2386 33.3182 47.5511 33.2614C47.8731 33.2045 48.1098 33.1572 48.2614 33.1193L49.3977 38.6307C49.0473 38.7348 48.5455 38.8627 47.892 39.0142C47.2481 39.1657 46.4811 39.2652 45.5909 39.3125C43.7917 39.4072 42.2813 39.2225 41.0597 38.7585C39.8381 38.285 38.9195 37.5417 38.304 36.5284C37.6884 35.5152 37.3902 34.2462 37.4091 32.7216V11.9545ZM62.4766 39.3977C60.1091 39.3977 58.0826 38.929 56.397 37.9915C54.7114 37.0445 53.4188 35.7282 52.5192 34.0426C51.6196 32.3475 51.1697 30.3826 51.1697 28.1477C51.1697 25.9129 51.6196 23.9527 52.5192 22.267C53.4188 20.572 54.7114 19.2557 56.397 18.3182C58.0826 17.3712 60.1091 16.8977 62.4766 16.8977C64.844 16.8977 66.8705 17.3712 68.5561 18.3182C70.2417 19.2557 71.5343 20.572 72.4339 22.267C73.3336 23.9527 73.7834 25.9129 73.7834 28.1477C73.7834 30.3826 73.3336 32.3475 72.4339 34.0426C71.5343 35.7282 70.2417 37.0445 68.5561 37.9915C66.8705 38.929 64.844 39.3977 62.4766 39.3977ZM62.5334 33.6023C63.1963 33.6023 63.7692 33.3797 64.2521 32.9347C64.7351 32.4896 65.1091 31.8551 65.3743 31.0312C65.6394 30.2074 65.772 29.2273 65.772 28.0909C65.772 26.9451 65.6394 25.965 65.3743 25.1506C65.1091 24.3267 64.7351 23.6922 64.2521 23.2472C63.7692 22.8021 63.1963 22.5795 62.5334 22.5795C61.8326 22.5795 61.2313 22.8021 60.7294 23.2472C60.2275 23.6922 59.844 24.3267 59.5788 25.1506C59.3137 25.965 59.1811 26.9451 59.1811 28.0909C59.1811 29.2273 59.3137 30.2074 59.5788 31.0312C59.844 31.8551 60.2275 32.4896 60.7294 32.9347C61.2313 33.3797 61.8326 33.6023 62.5334 33.6023Z"
              fill="#4EA8DE"
            />
            <path
              d="M84.8629 39.2841C83.3099 39.2841 81.88 38.8769 80.5732 38.0625C79.2758 37.2481 78.2341 36.0123 77.4482 34.3551C76.6716 32.6979 76.2834 30.6098 76.2834 28.0909C76.2834 25.4583 76.6906 23.3182 77.505 21.6705C78.3288 20.0227 79.3894 18.8153 80.6868 18.0483C81.9936 17.2812 83.3667 16.8977 84.8061 16.8977C85.8857 16.8977 86.8326 17.0871 87.647 17.4659C88.4614 17.8352 89.1432 18.3324 89.6925 18.9574C90.2417 19.5729 90.6584 20.25 90.9425 20.9886H91.0561V9.90909H98.897V39H91.1129V35.4205H90.9425C90.6394 36.1591 90.2038 36.822 89.6357 37.4091C89.0769 37.9867 88.3951 38.446 87.5902 38.7869C86.7947 39.1184 85.8857 39.2841 84.8629 39.2841ZM87.7607 33.2614C88.4804 33.2614 89.0959 33.053 89.6072 32.6364C90.1281 32.2102 90.5258 31.6136 90.8004 30.8466C91.0845 30.0701 91.2266 29.1515 91.2266 28.0909C91.2266 27.0114 91.0845 26.0881 90.8004 25.321C90.5258 24.5445 90.1281 23.9527 89.6072 23.5455C89.0959 23.1288 88.4804 22.9205 87.7607 22.9205C87.041 22.9205 86.4254 23.1288 85.9141 23.5455C85.4122 23.9527 85.0239 24.5445 84.7493 25.321C84.4841 26.0881 84.3516 27.0114 84.3516 28.0909C84.3516 29.1705 84.4841 30.0985 84.7493 30.875C85.0239 31.642 85.4122 32.2339 85.9141 32.6506C86.4254 33.0578 87.041 33.2614 87.7607 33.2614ZM113.258 39.3977C110.89 39.3977 108.864 38.929 107.178 37.9915C105.493 37.0445 104.2 35.7282 103.3 34.0426C102.401 32.3475 101.951 30.3826 101.951 28.1477C101.951 25.9129 102.401 23.9527 103.3 22.267C104.2 20.572 105.493 19.2557 107.178 18.3182C108.864 17.3712 110.89 16.8977 113.258 16.8977C115.625 16.8977 117.652 17.3712 119.337 18.3182C121.023 19.2557 122.316 20.572 123.215 22.267C124.115 23.9527 124.565 25.9129 124.565 28.1477C124.565 30.3826 124.115 32.3475 123.215 34.0426C122.316 35.7282 121.023 37.0445 119.337 37.9915C117.652 38.929 115.625 39.3977 113.258 39.3977ZM113.315 33.6023C113.978 33.6023 114.55 33.3797 115.033 32.9347C115.516 32.4896 115.89 31.8551 116.156 31.0312C116.421 30.2074 116.553 29.2273 116.553 28.0909C116.553 26.9451 116.421 25.965 116.156 25.1506C115.89 24.3267 115.516 23.6922 115.033 23.2472C114.55 22.8021 113.978 22.5795 113.315 22.5795C112.614 22.5795 112.013 22.8021 111.511 23.2472C111.009 23.6922 110.625 24.3267 110.36 25.1506C110.095 25.965 109.962 26.9451 109.962 28.0909C109.962 29.2273 110.095 30.2074 110.36 31.0312C110.625 31.8551 111.009 32.4896 111.511 32.9347C112.013 33.3797 112.614 33.6023 113.315 33.6023Z"
              fill="#5E60CE"
            />
            <g clipPath="url(#clip0_4130_509)">
              <path
                d="M11.0215 12.933C14.1472 16.9011 15.8158 21.7944 15.7553 26.8155V28.0141L16.7865 28.6416C18.119 29.4482 19.1127 30.6993 19.5866 32.1669C19.1705 31.8605 18.7352 31.5803 18.2833 31.3278L15.5333 29.7838L15.0391 32.9001C14.9963 33.1755 14.9389 33.4485 14.8672 33.718H7.16151C7.04692 33.3655 6.95382 33.0129 6.86789 32.6463L6.24484 29.8261L3.70968 31.2362C3.28615 31.473 2.87723 31.7344 2.48507 32.0188C2.96824 30.5682 3.94123 29.3242 5.24224 28.4935L6.22336 27.866V26.7521C6.24106 21.7513 7.92967 16.8952 11.0287 12.933H11.0215ZM11.0287 10C10.868 10.0004 10.7128 10.058 10.5918 10.1622L10.5274 10.2186C6.39778 14.7656 4.10466 20.6454 4.08208 26.745C2.32967 27.8643 1.03251 29.5543 0.417263 31.5197C-0.197979 33.485 -0.0921719 35.6007 0.716194 37.4971C1.56776 35.6455 2.99131 34.1058 4.7839 33.0975C4.96368 33.8642 5.2031 34.6161 5.50005 35.3467C5.53771 35.4871 5.62118 35.6114 5.73763 35.7006C5.85408 35.7898 5.99706 35.8388 6.14458 35.8402H16.0847C16.2852 35.8402 16.4857 35.6498 16.586 35.3537C16.8758 34.6592 17.0778 33.9322 17.1875 33.1892C18.9836 34.1932 20.4083 35.7342 21.2553 37.5887C22.1124 35.7017 22.2451 33.5727 21.6287 31.5967C21.0124 29.6206 19.6888 27.9319 17.9037 26.8437C17.9745 20.7082 15.6935 14.7718 11.5157 10.2186C11.4535 10.1501 11.3773 10.0952 11.2922 10.0576C11.2071 10.0199 11.1149 10.0003 11.0215 10H11.0287Z"
                fill="#4EA8DE"
              />
              <path
                d="M11.0216 26.1598C10.4715 26.1598 9.93376 25.9995 9.47611 25.699C9.01846 25.3986 8.6614 24.9715 8.44993 24.4716C8.23847 23.9716 8.18206 23.4213 8.28782 22.8898C8.39358 22.3584 8.65678 21.8697 9.04423 21.4853C9.43169 21.1009 9.92606 20.838 10.465 20.7298C11.004 20.6216 11.5634 20.6729 12.0728 20.8773C12.5822 21.0816 13.0188 21.4298 13.3275 21.8781C13.6361 22.3263 13.8031 22.8545 13.8074 23.396C13.8159 23.7469 13.7542 24.0961 13.6256 24.4235C13.4971 24.751 13.3043 25.0503 13.0582 25.3043C12.8121 25.5583 12.5176 25.7622 12.1915 25.9041C11.8654 26.0461 11.5141 26.1234 11.1576 26.1316C11.1126 26.1387 11.0666 26.1387 11.0216 26.1316V26.1598Z"
                fill="#4EA8DE"
              />
              <path
                d="M14.8959 37.5958C14.7167 37.5901 14.5382 37.6198 14.3708 37.683C14.2034 37.7462 14.0505 37.8416 13.9211 37.9638C13.7917 38.086 13.6884 38.2323 13.6172 38.3943C13.546 38.5563 13.5084 38.7307 13.5066 38.9072V43.067C13.5066 43.4297 13.653 43.7776 13.9135 44.0342C14.1741 44.2907 14.5274 44.4348 14.8959 44.4348C15.2644 44.4348 15.6178 44.2907 15.8783 44.0342C16.1389 43.7776 16.2852 43.4297 16.2852 43.067V38.9636C16.291 38.7877 16.2611 38.6126 16.1973 38.4482C16.1336 38.2839 16.0372 38.1337 15.9139 38.0064C15.7906 37.879 15.6428 37.7772 15.4791 37.7067C15.3154 37.6362 15.139 37.5985 14.9604 37.5958H14.8959Z"
                fill="#5E60CE"
              />
              <path
                d="M7.16154 37.5957C6.97931 37.5863 6.797 37.6129 6.62546 37.6742C6.45392 37.7355 6.29665 37.8302 6.16302 37.9525C6.02939 38.0749 5.92213 38.2224 5.84761 38.3864C5.77309 38.5504 5.73284 38.7275 5.72925 38.9071V43.067C5.72925 43.4297 5.87562 43.7776 6.13617 44.0341C6.39672 44.2906 6.7501 44.4348 7.11857 44.4348C7.48704 44.4348 7.84042 44.2906 8.10097 44.0341C8.36152 43.7776 8.50789 43.4297 8.50789 43.067V38.9635C8.51362 38.7877 8.48373 38.6125 8.41998 38.4482C8.35623 38.2838 8.25989 38.1336 8.13658 38.0063C8.01326 37.879 7.86544 37.7771 7.70173 37.7067C7.53802 37.6362 7.36169 37.5985 7.18302 37.5957H7.16154Z"
                fill="#5E60CE"
              />
              <path
                d="M10.9213 37.5958C10.7426 37.592 10.5649 37.623 10.3984 37.6869C10.2318 37.7507 10.0797 37.8463 9.95068 37.9681C9.82167 38.0899 9.71828 38.2355 9.64644 38.3966C9.5746 38.5577 9.5357 38.7312 9.53198 38.9072V44.6392C9.53198 45.002 9.67836 45.3499 9.93891 45.6064C10.1995 45.8629 10.5528 46.007 10.9213 46.007C11.2898 46.007 11.6432 45.8629 11.9037 45.6064C12.1643 45.3499 12.3106 45.002 12.3106 44.6392V38.9988C12.3164 38.823 12.2865 38.6478 12.2227 38.4835C12.159 38.3191 12.0626 38.1689 11.9393 38.0416C11.816 37.9143 11.6682 37.8124 11.5045 37.7419C11.3408 37.6714 11.1644 37.6337 10.9858 37.631L10.9213 37.5958Z"
                fill="#5E60CE"
              />
            </g>
            <defs>
              <clipPath id="clip0_4130_509">
                <rect
                  width="22"
                  height="36"
                  fill="white"
                  transform="translate(0 10)"
                />
              </clipPath>
            </defs>
          </svg>
          <form
            onSubmit={createNewTask}
            className="mt-14 -mb-7 w-[736px] max-w-full flex gap-x-2 px-2"
          >
            <Input
              onChange={handleNewTaskText}
              value={newTaskText}
              className="max-w-[638px] w-full p-4 rounded-lg border border-gray-700 bg-gray-500 placeholder:text-gray-300 focus:outline-none text-gray-100 focus:border-purple-dark"
            />
            <button
              type="submit"
              className="w-[90px] h-[52px] flex items-center bg-blue-dark text-gray-100 rounded-lg p-4 font-bold text-sm gap-2 hover:bg-blue hover:transition-all duration-100"
            >
              Criar{' '}
              <svg
                width="17"
                height="16"
                viewBox="0 0 17 16"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clipPath="url(#clip0_12_497)">
                  <path
                    d="M8.48373 1.45164C9.77565 1.45164 11.0386 1.83474 12.1128 2.5525C13.187 3.27025 14.0242 4.29043 14.5186 5.48401C15.013 6.6776 15.1424 7.99098 14.8903 9.25808C14.6383 10.5252 14.0161 11.6891 13.1026 12.6026C12.1891 13.5162 11.0252 14.1383 9.75807 14.3903C8.49097 14.6424 7.17759 14.513 5.984 14.0186C4.79042 13.5242 3.77025 12.687 3.05249 11.6128C2.33473 10.5386 1.95163 9.27566 1.95163 7.98374C1.95832 6.25338 2.64867 4.5958 3.87223 3.37224C5.09579 2.14868 6.75337 1.45833 8.48373 1.45164ZM8.48373 6.68116e-05C6.90611 0.00652074 5.36578 0.480235 4.05717 1.36141C2.74857 2.24258 1.73037 3.4917 1.13111 4.95108C0.531846 6.41046 0.378395 8.01468 0.690125 9.5612C1.00186 11.1077 1.76479 12.5272 2.88262 13.6405C4.00044 14.7538 5.42304 15.5109 6.97082 15.8163C8.51861 16.1217 10.1222 15.9617 11.5791 15.3565C13.036 14.7513 14.281 13.728 15.1568 12.4158C16.0326 11.1036 16.5 9.56136 16.5001 7.98374C16.5001 6.93255 16.2925 5.89171 15.8892 4.92096C15.486 3.9502 14.895 3.06863 14.1502 2.32685C13.4053 1.58507 12.5214 0.997679 11.549 0.598388C10.5766 0.199097 9.5349 -0.00423349 8.48373 6.68116e-05Z"
                    fill="#F2F2F2"
                  />
                  <path
                    d="M12.207 7.38129H8.9954V4.16968H7.91397V7.38129H4.69873V8.46271H7.91397V11.6743H8.9954V8.46271H12.207V7.38129Z"
                    fill="#F2F2F2"
                  />
                </g>
                <defs>
                  <clipPath id="clip0_12_497">
                    <rect
                      width="16"
                      height="16"
                      fill="white"
                      transform="translate(0.5)"
                    />
                  </clipPath>
                </defs>
              </svg>
            </button>
          </form>
        </div>
      </div>
      <div className="mt-[92px] px-2 w-[736px] max-w-full mx-auto">
        <div className="flex justify-between mb-6">
          <p className="text-sm text-blue font-bold">
            Tarefas criadas{' '}
            <span className="ml-2 bg-gray-400 py-[2px] px-2 rounded-full text-xs text-gray-200">
              {totalOfTasks}
            </span>
          </p>

          <p className="text-sm text-purple font-bold">
            Concluídas{' '}
            <span className="ml-2 bg-gray-400 py-[2px] px-2 rounded-full text-xs text-gray-200">
              {totalOfTasks === 0
                ? '0'
                : `${checkedTasksCounter} de ${totalOfTasks}`}
            </span>
          </p>
        </div>

        {totalOfTasks === 0 ? (
          <EmptyTasksList />
        ) : (
          <div className="flex flex-col gap-3">
            {taskList?.map((task) => {
              const isParagraphChecked = task.isChecked ? 'line-through' : ''
              return (
                <div
                  key={task.id}
                  className="gap-3 p-4 border bg-gray-500 border-gray-400 rounded-lg justify-between items-start inline-flex"
                >
                  <div className="inline-flex gap-3">
                    <input
                      onClick={(event) =>
                        handleTaskToggle(
                          event as MouseEvent<HTMLInputElement>,
                          task.id,
                        )
                      }
                      type="checkbox"
                      className="form-checkbox rounded-full text-purple-dark hover:text-purple bg-transparent ring-transparent outline-none border-blue hover:border-blue-dark border-2 focus:ring-transparent focus:ring-offset-transparent"
                    />
                    <p
                      className={`${isParagraphChecked} text-gray-100 text-sm leading-14`}
                    >
                      {task.content}
                    </p>
                  </div>
                  <svg
                    onClick={() => handleDeleteTask(task.id)}
                    className="w-7 h-7 hover:rounded hover:bg-gray-400 p-1 hover:stroke-danger hover:cursor-pointer flex-none "
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M14.2021 9.98547H12.8716V15.5073H14.2021V9.98547Z"
                      fill="#808080"
                    />
                    <path
                      d="M11.4624 9.98547H10.1318V15.5073H11.4624V9.98547Z"
                      fill="#808080"
                    />
                    <path
                      d="M18.478 7.16712C18.4754 7.03061 18.4295 6.89846 18.3469 6.78975C18.2642 6.68104 18.1492 6.6014 18.0184 6.56232C17.9596 6.53782 17.8974 6.52252 17.8339 6.51696H14.2868C14.1525 6.07791 13.8808 5.69355 13.5117 5.42047C13.1426 5.14739 12.6956 5 12.2365 5C11.7774 5 11.3304 5.14739 10.9613 5.42047C10.5922 5.69355 10.3205 6.07791 10.1862 6.51696H6.63911C6.58068 6.51814 6.52269 6.52729 6.46674 6.54418H6.45162C6.31318 6.58701 6.19334 6.67547 6.11163 6.79515C6.02992 6.91483 5.99117 7.05866 6.00169 7.20319C6.01222 7.34771 6.0714 7.48441 6.16958 7.59099C6.26776 7.69757 6.39916 7.76774 6.54234 7.79006L7.25298 17.5334C7.26382 17.9127 7.41693 18.2741 7.68191 18.5458C7.94688 18.8175 8.30435 18.9797 8.68332 19H15.7867C16.1662 18.9804 16.5244 18.8186 16.79 18.5468C17.0556 18.2751 17.2092 17.9132 17.22 17.5334L17.9277 7.79914C18.0802 7.77797 18.22 7.70232 18.3212 7.58615C18.4223 7.46999 18.478 7.32116 18.478 7.16712ZM12.2365 6.21456C12.3661 6.21458 12.4943 6.24146 12.6129 6.29351C12.7316 6.34556 12.8382 6.42164 12.926 6.51696H11.547C11.6346 6.42135 11.7411 6.34507 11.8599 6.29299C11.9786 6.24092 12.1069 6.21421 12.2365 6.21456ZM15.7867 17.7904H8.68332C8.60168 17.7904 8.47467 17.6573 8.45955 17.4457L7.75798 7.81123H16.715L16.0135 17.4457C15.9984 17.6573 15.8714 17.7904 15.7867 17.7904Z"
                      fill="#808080"
                    />
                  </svg>
                </div>
              )
            })}
          </div>
        )}
      </div>
    </main>
  )
}
